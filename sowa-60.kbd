;; kanata config fot ansi 60% keyboard

;; Not sure about this option
;; See docs: https://github.com/jtroo/kanata/blob/main/docs/config.adoc#process-unmapped-keys

(defcfg
  process-unmapped-keys yes
  concurrent-tap-hold yes

  ;; apply config to 60% kb only
  linux-dev-names-include (
    "ZXWMicroChip ZXW-KEYBOARD"
    "ZXWMicroChip ZXW-KEYBOARD Mouse"
    "ZXWMicroChip ZXW-KEYBOARD Keyboard"
  )
)

;; Only one defsrc is allowed.
;;
;; defsrc defines the keys that will be intercepted by kanata. The order of the
;; keys matches with deflayer declarations and all deflayer declarations must
;; have the same number of keys as defsrc. Any keys not listed in defsrc will
;; be passed straight to the operating system.

(defsrc
  esc  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '         ret
  lsft z    x    c    v    b    n    m    ,    .    /         up   rsft
  lctl lmet lalt           spc                 ralt left down rght cmp
)

#|
(deflayer ansi_60p
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _         _
  _    _    _    _    _    _    _    _    _    _    _         _    _
  _    _    _              _                   _    _    _    _    _
)
|#

;; The first layer defined is the layer that will be active by default when
;; kanata starts up. This layer is the standard QWERTY layout.

(deflayer qwerty
  esc  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @tab q    w    e    r    t    y    u    i    o    p    [    ]    \
  @cap a    s    d    f    g    h    j    k    l    ;    '         ret
  lsft z    x    c    v    b    n    m    ,    .    /         up   rsft
  lctl lmet lalt           spc                 ralt left down rght cmp
)

;; (deflayer sowa
;;   _    _    _    _    _    _    _    _    _    _    _    _    _    _
;;   @tab q    w    h    d    v    /    j    o    u    z    _    _    _
;;   @cap x    r    @n   @t   l    '    p    a    e    i    ;         _
;;   _    k    b    m    @s   f    g    @c   y    ,    .         _    _
;;   _    _    _              _                   @ra  _    _    _    _
;; )

;; sowa graphite
(deflayer sowa
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  @tab q    b    l    d    w    '    k    o    u    j    _    _    _
  @cap x    n    @r   @t   c    /    h    a    e    i    ;         _
  _    z    v    m    @s   g    f    @p   y    ,    .         _    _
  _    _    _              _                   @ra  _    _    _    _
)

(defalias
  ;; layer-switch changes the base layer
  sw (layer-switch sowa)
  qwr (layer-switch qwerty)

  ;; tap: tab, hold: switch to layer
  tab (tap-hold 200 200 tab (layer-while-held layers))

  ;; tap for esc, hold for ctrl layer
  cap (tap-hold 200 200 esc (layer-while-held vanilla_ctrl))

  ;; tap: letter, hold: toggle to layer
  r (tap-hold 200 200 r (layer-while-held mods))
  s (tap-hold 200 200 s (layer-while-held syslayer))
  p (tap-hold 200 200 p (layer-while-held cc))
  t (tap-hold 200 200 t (layer-while-held typing))

  1c (one-shot-press 2000 lctl)
  1s (one-shot-press 2000 lsft)
  1a (one-shot-press 2000 lalt)

  ;; delete a word
  dw C-bspc

  td1 (tap-dance 300 (S-1 S-/ S-2 esc)) ;; ! ? @
  td2 (tap-dance 200 (- S-- esc))   ;; - _
  td3 (tap-dance 200 (= + esc))     ;; = +
  td5 (tap-dance 200 (' S-' esc))   ;; ' "
  hm (macro S-` /) ;; ~/
  cw (caps-word 2000) ;; caps word

  ra (switch
    (lsft) lsft fallthrough
    (lctl) lctl fallthrough
    (lalt) lalt fallthrough
    () (layer-while-held FF) break
  )
)

(deflayer layers
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    @qwr @sw  _    lrld _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _         _
  _    _    _    _    _    _    _    _    _    _    _         _    _
  _    _    _              _                   _    _    _    _    _
)

(deflayer syslayer
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    bspc @dw  esc  _    _    _    _
  _    _    _    _    _    _    _    lft  down up   rght _         _
  _    @1a  @1s  @1c  _    _    _    ret  tab  _    _         _    _
  _    _    _              _                   _    _    _    _    _
)

(deflayer typing
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    bspc @dw  '    S-'  _    _    _
  _    _    @cw  _    _    @td1 @hm  @td3 @td2 _    _    _         _
  _    _    _    _    _    _    _    S-;  /    _    _         _    _
  _    _    _              _                   _    _    _    _    _
)

(deflayer vanilla_ctrl
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    C-a  C-s  _    _    _    _    _    _    _    _    _         _
  _    C-z  C-x  C-c  C-v  _    _    _    _    _    _         _    _
  _    _    _              _                   _    _    _    _    _
)

(deflayer mods
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    C-x  _    _    _    _    _    _    _    _    _
  _    _    C-a  _    C-c  C-v  _    _    _    _    _    _         _
  _    _    _    C-z  C-s  _    _    _    _    _    _         _    _
  _    _    _              C-a                 _    _    _    _    _
)

(deflayer cc
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _         _
  _    _    _    _    _    _    _    _    @1c  @1s  @1a       _    _
  _    _    _              _                   _    _    _    _    _
)

(deflayer FF
  _    f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _         _
  _    _    _    _    _    _    _    _    _    _    _         _    _
  _    _    _              _                   _    _    _    _    _
)
