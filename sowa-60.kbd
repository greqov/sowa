;; kanata config fot ansi 60% keyboard

;; Not sure about this option
;; See docs: https://github.com/jtroo/kanata/blob/main/docs/config.adoc#process-unmapped-keys

(defcfg
  process-unmapped-keys yes
  concurrent-tap-hold yes

  ;; apply config to 60% kb only
  linux-dev-names-include (
    "ZXWMicroChip ZXW-KEYBOARD"
    "ZXWMicroChip ZXW-KEYBOARD Mouse"
    "ZXWMicroChip ZXW-KEYBOARD Keyboard"
  )
)

;; Only one defsrc is allowed.
;;
;; defsrc defines the keys that will be intercepted by kanata. The order of the
;; keys matches with deflayer declarations and all deflayer declarations must
;; have the same number of keys as defsrc. Any keys not listed in defsrc will
;; be passed straight to the operating system.

(defsrc
  esc  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '         ret
  lsft z    x    c    v    b    n    m    ,    .    /         up   rsft
  lctl lmet lalt           spc                 ralt left down rght cmp
)

#|
(deflayer ansi_60p
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _         _
  _    _    _    _    _    _    _    _    _    _    _         _    _
  _    _    _              _                   _    _    _    _    _
)
|#

;; The first layer defined is the layer that will be active by default when
;; kanata starts up. This layer is the standard QWERTY layout.

(deflayer qwerty
  esc  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  @cap a    s    d    f    g    h    j    k    l    ;    '         ret
  lsft z    x    c    v    b    n    m    ,    .    /         up   rsft
  lctl lmet lalt           spc                 @ra  left down rght menu
)

;; sowa
(deflayer sowa
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  tab  q    b    l    @d0  w    '    k    o    u    j    _    _    _
  @RU  x    n    @r0  @t0  @c0  /    @h0  @a0  @e0  i    ;         _
  _    z    @v0  m    @s0  g    f    p    y    ,    .         _    _
  _    _    _              _                   @ra  _    _    _    _
)

;; sowaru
;; complimentary layer to work with default Cyrillic layout ЙЦУКЕН
(deflayer sowaru
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  tab  /    '    s    @q1  o    ]    w    h    u    x    i    [    _
  @EN  .    b    @j1  @fo  @r1  a    @g1  @y1  @c1  d    ;         _
  _    p    @e1  m    @t1  z    l    n    k    v    ,         _    _
  _    _    _              _                   @ra  _    _    _    _
)

(defalias
  ;; layer-switch changes the base layer
  sw (layer-switch sowa)
  swr (layer-switch sowaru)
  qwr (layer-switch qwerty)

  ;; switch system language with Shift+Alt
  ;; todo: pick different hotkey to prevent accidentally switching
  EN (multi lsft lalt (layer-switch sowa))
  RU (multi lsft lalt (layer-switch sowaru))

  ;; on hold switch to sowa layer for English letters for shortcuts
  r1 (tap-hold 200 200 r (multi lctl (layer-while-held sowa)))
  g1 (tap-hold 200 200 g (multi rctl (layer-while-held sowa)))
  j1 (tap-hold 200 200 j (multi lalt (layer-while-held sowa)))
  c1 (tap-hold 200 200 c (multi ralt (layer-while-held sowa)))
  ;; stay on sowaru layer for capital Cyrillic letters
  fo (tap-hold 200 200 f lsft)
  y1 (tap-hold 200 200 y rsft)

  ;; home row mods for shortcuts
  c0 (tap-hold 200 200 c lctl)
  h0 (tap-hold 200 200 h rctl)
  t0 (tap-hold 200 200 t lsft)
  a0 (tap-hold 200 200 a rsft)
  r0 (tap-hold 200 200 r lalt)
  e0 (tap-hold 200 200 e ralt)

  ;; caps to esc
  cap esc

  ;; tap: letter, hold: toggle to layer
  s0 (tap-hold 200 200 s (layer-while-held nav))
  t1 (tap-hold 200 200 t (layer-while-held nav))

  v0 (tap-hold 200 200 v (layer-while-held left_hand))
  e1 (tap-hold 200 200 e (layer-while-held left_hand))

  d0 (tap-hold 200 200 d (layer-while-held numbers))
  q1 (tap-hold 200 200 q (layer-while-held numbers))

  dw C-bspc ;; delete a word
  cw (caps-word 2000) ;; caps word

  ra (switch
    (lsft) lsft fallthrough
    (lctl) lctl fallthrough
    (lalt) lalt fallthrough
    () (layer-while-held FF) break
  )
)

(deflayer layers
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    @qwr @sw  @swr lrld _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _         _
  _    _    _    _    _    _    _    _    _    _    _         _    _
  _    _    _              _                   _    _    _    _    _
)

(deflayer nav
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    bspc @dw  esc  _    _    _    _
  _    _    @cw  _    bspc _    home lft  down up   rght end       _
  _    lalt lsft lctl _    _    _    ret  tab  _    _         _    _
  _    _    _              _                   _    _    _    _    _
)

(deflayer left_hand
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _         _
  _    _    _    C-c  C-v  _    _    _    _    _    _         _    _
  _    _    _              _                   _    _    _    _    _
)

(deflayer numbers
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    lsft _    _    _    7    8    9    =    _    _    _
  _    _    _    _    _    _    _    4    5    6    0    _         _
  _    _    _    _    _    _    _    1    2    3    -         _    _
  _    _    _              _                   _    _    _    _    _
)

(deflayer FF
  _    f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  _
  _    @qwr @sw  @swr lrld _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _         _
  _    _    _    _    _    _    _    _    _    _    _         _    _
  _    _    _              _                   _    _    _    _    _
)
